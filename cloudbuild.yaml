# ---
# title: "Cloud Build pipeline for DeepResearch Agent"
# document_id: "DRA-CICD-0001"
# version: "1.0"
# status: "Aktiv"
# date: "2025-08-18"
# owner: "Henrik Strand / NORSAIN"
# contact: "info@norsain.com"
# path: "/cloudbuild.yaml"
# tags: ["cloudbuild", "gcp", "ci/cd", "artifact-registry", "kaniko", "cache"]
# project: "NORSAIN Core Platform"
# workspace: "GPT Project Room"
# usage_scope: "Bygg og deploy av deep-research-agent til GCP"
# review_cycle: "Kvartalsvis"
# license: "CC-BY-SA-4.0"
# ---

substitutions:
  _AR_REGION: europe-west4
  _AR_REPO: deep-research-agent
  _IMAGE: deep-research-agent
  _PY_VERSION: "3.11"

# Generelle byggevalg
options:
  logging: CLOUD_LOGGING_ONLY
  machineType: E2_HIGHCPU_8

# Trinnvis pipeline: install → lint → test → build & push (med cache) → tag latest
steps:
  # 1) Installer avhengigheter for lint/test
  - name: "python:${_PY_VERSION}"
    id: "Install"
    entrypoint: "bash"
    args:
      - -lc
      - |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        pip install black ruff pytest

  # 2) Lint
  - name: "python:${_PY_VERSION}"
    id: "Lint"
    entrypoint: "bash"
    args: ["-lc", "black --check . && ruff ."]

  # 3) Tester (tillater tom test-suite)
  - name: "python:${_PY_VERSION}"
    id: "Tests"
    entrypoint: "bash"
    args: ["-lc", "pytest -q || echo 'No tests yet'"]

  # 4) Build & push image med Kaniko + cache til Artifact Registry
  - name: "gcr.io/kaniko-project/executor:latest"
    id: "Build & Push (sha)"
    args:
      - --destination=${_AR_REGION}-docker.pkg.dev/$PROJECT_ID/${_AR_REPO}/${_IMAGE}:$SHORT_SHA
      - --cache=true
      - --cache-ttl=24h
      - --cache-repo=${_AR_REGION}-docker.pkg.dev/$PROJECT_ID/${_AR_REPO}/${_IMAGE}-cache
      - --reuse-cache=true
      - --snapshotMode=redo
      - --compressed-caching=false
      - --use-new-run
      # Valgfritt: SBOM (krever støtte i base image / skann i AR i stedet)
      # - --generate-sbom

  # 5) Merk samme image som :latest (immutability ivaretas av sha-tag)
  - name: "gcr.io/cloud-builders/gcloud"
    id: "Tag latest"
    entrypoint: "bash"
    args:
      - -lc
      - |
        gcloud artifacts docker tags add           ${_AR_REGION}-docker.pkg.dev/$PROJECT_ID/${_AR_REPO}/${_IMAGE}:$SHORT_SHA           ${_AR_REGION}-docker.pkg.dev/$PROJECT_ID/${_AR_REPO}/${_IMAGE}:latest

# Deklarer produserte images (gir lenker i Cloud Build UI)
images:
  - "${_AR_REGION}-docker.pkg.dev/$PROJECT_ID/${_AR_REPO}/${_IMAGE}:$SHORT_SHA"
  - "${_AR_REGION}-docker.pkg.dev/$PROJECT_ID/${_AR_REPO}/${_IMAGE}:latest"

# Anbefalte triggere (eksempel – konfigurer i Cloud Console):
# - main branch: bygg alle commits, deploy fra separat pipeline
# - release tags (v*): bygg og push prod-images
